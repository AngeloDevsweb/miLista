{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","App","valoresIniciales","nombre","url","descripcion","useState","guardar","setGuardar","video","setVideo","fakeId","setFakeId","handleChange","e","target","name","value","guardarVideo","valor","a","collection","doc","set","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","update","borrarVideo","id","delete","warn","getVid","get","data","useEffect","onSnapshot","querySnapshot","docs","forEach","push","className","onSubmit","preventDefault","type","placeholder","onChange","required","rows","map","videos","onClick","class","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faa15620.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC9MyUSlAWO_XOLdW9S-dnX8fgWDM719o0\",\n    authDomain: \"mylist-53a33.firebaseapp.com\",\n    projectId: \"mylist-53a33\",\n    storageBucket: \"mylist-53a33.appspot.com\",\n    messagingSenderId: \"554204363871\",\n    appId: \"1:554204363871:web:3050a6726ee27564136fea\"\n  };\n  // Initialize Firebase\n  const fb = firebase.initializeApp(firebaseConfig);\n\n  export const db = fb.firestore();","import React, { useState, useEffect } from 'react'\nimport ReactPlayer from 'react-player'\nimport { db } from '../src/firebase'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport './App.css';\n\n\n\nfunction App() {\n\n  const valoresIniciales = {\n    nombre:'',\n    url:'',\n    descripcion:''\n  }\n  // variables de estado\n  const [guardar, setGuardar]=useState(valoresIniciales)\n  const [video, setVideo] = useState([])\n  const [fakeId, setFakeId] = useState('')\n\n\n  // funcion para guardar en una variables nuestros inputs\n  const handleChange = (e)=>{\n    const { name, value } = e.target \n    setGuardar({...guardar, [name]:value})\n  }\n  // funcion para escuchar el envio de datos \n  const onInputChange = (e)=>{\n    e.preventDefault()\n    // console.log(guardar);\n    guardarVideo(guardar)\n    setGuardar({...valoresIniciales})\n  }\n  // con esta funcion guardamos la informacion en la base de datos\n  const guardarVideo = async (valor)=>{\n    if(fakeId === ''){\n      await db.collection('video').doc().set(valor)\n      toast.success('ðŸ¦„ el video fue agregado', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n    else{\n      await db.collection('video').doc(fakeId).update(valor)\n    }\n    setFakeId('')\n    \n  }\n  // funcion para eliminar el video\n  const borrarVideo = async (id)=>{\n    await db.collection('video').doc(id).delete()\n    toast.warn('ðŸ¦„ el video fue eliminado', {\n      position: \"top-center\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n  }\n  // evento para obtener los cambios dentro de la base de datos\n  const getVideos = ()=>{\n    db.collection('video').onSnapshot((querySnapshot)=>{\n      const docs = []\n      querySnapshot.forEach((doc)=>{\n        docs.push({...doc.data(), id:doc.id})\n      })\n      setVideo(docs)\n    })\n  }\n  // obtenemos un solo objeto de nuestra base de datos\n  const getVid = async(id) =>{\n    const doc = await db.collection('video').doc(id).get()\n    setGuardar({...doc.data()})\n  }\n  // renderizacion\n  useEffect(()=>{\n    getVideos()\n  }, [])\n\n  // efecto para actualizar \n\n  useEffect(()=>{\n    if (fakeId === ''){\n      setGuardar({...valoresIniciales})\n    }\n    else{\n      getVid(fakeId)\n    }\n\n  },[fakeId])\n  return (\n    <div className=\"\">\n      <h1 className=\"text-center mb-5 mt-5 text-white\" >Mi lista de reproduccion favorita</h1>\n       <div className=\"row\">\n        <div className=\"col-md-4\">\n          <h2 className=\"text-center text-white\">formulario</h2>\n\n          <div>\n            <form className=\" card-body\" onSubmit={onInputChange} >\n              <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"ingresar el titulo del video\" className=\"form-control mb-4\" name='nombre' onChange={handleChange} \n                value={guardar.nombre}  required />\n              </div>\n\n              <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"ingresar la url del video\" className=\"form-control mb-4\" name='url' onChange={handleChange} \n                value={guardar.url} required />\n              </div>\n\n              <div className=\"form-group\">\n                <textarea rows=\"4\" placeholder=\"escribe la descripcion del video\" className=\"form-control mb-4\" name=\"descripcion\" onChange={handleChange}\n                value={guardar.descripcion} ></textarea>\n              </div>\n\n              <button className=\"btn btn-primary form-control\">\n                { fakeId === '' ? 'GUARDAR': 'ACTUALIZAR'}\n              </button>\n\n            </form>\n          </div>\n        </div>\n\n        <div className=\"col-md-8\">\n        \n          <h2 className=\"text-center text-white\" >lista de videos</h2>\n\n          <div>\n            {video.map(videos => (\n              <div className=\"card mb-1\" key={videos.id} >\n                <div className=\"card-body\">\n                {/* en esta seccion colocamos el titulo */}\n                  <div className=\"d-flex justify-content-between\" >\n                    <h3>{videos.nombre}</h3>\n                    <div>\n                      <button className=\"btn btn-danger m-2\" onClick={()=>borrarVideo(videos.id)} ><i class=\"fas fa-trash\"></i></button>\n                      <button className=\"btn btn-success\" onClick={()=>setFakeId(videos.id)} ><i class=\"fas fa-pencil-alt\"></i></button>\n                    </div>\n                  </div>\n\n                {/* este contenedor es del reproductor de video */}\n                  <div>\n                    <ReactPlayer\n                      url={videos.url}\n                      width='100%'\n                      height='650px'\n                    />\n                  </div>\n                {/* en esta parte asignamos un titulo a nuestra descripcion */}\n                  <h4 className='mt-2' >Descripcion del video</h4>\n                  <p>{videos.descripcion}</p>\n\n\n                </div>\n              </div>\n            ))}\n          </div>\n\n        </div>\n\n       </div>\n\n       <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}